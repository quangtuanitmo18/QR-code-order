name: CI/CD Pipeline

on:
  push:
    branches: [main, deploy]
  pull_request:
    branches: [main]

jobs:
  ci:
    runs-on: ubuntu-22.04
    # Luôn chạy CI cho mọi event
    outputs:
      server-changed: ${{ steps.check-server.outputs.server }}
      client-changed: ${{ steps.check-client.outputs.client }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      # Kiểm tra thay đổi trong thư mục
      - name: Check server changes
        id: check-server
        uses: dorny/paths-filter@v2
        with:
          filters: |
            server:
              - 'server/**'

      - name: Check client changes
        id: check-client
        uses: dorny/paths-filter@v2
        with:
          filters: |
            client:
              - 'client/**'

      # Tạo file .env cho CI
      - name: Create client .env file for CI
        if: steps.check-client.outputs.client == 'true'
        run: |
          echo "${{ secrets.CLIENT_ENV_CI }}" > client/.env
          cat client/.env | grep -v "SECRET\|PASSWORD" | sed 's/=.*/=***/'

      - name: Create server .env file for CI
        if: steps.check-server.outputs.server == 'true'
        run: |
          echo "${{ secrets.SERVER_ENV_CI }}" > server/.env
          cat server/.env | grep -v "SECRET\|PASSWORD" | sed 's/=.*/=***/'

      # Install và test client nếu có thay đổi
      - name: Install client dependencies
        if: steps.check-client.outputs.client == 'true'
        run: cd client && rm -rf node_modules package-lock.json && npm install

      - name: Lint client
        if: steps.check-client.outputs.client == 'true'
        run: cd client && npm run lint

      - name: Build client
        if: steps.check-client.outputs.client == 'true'
        run: |
          cd client
          # Tăng giới hạn bộ nhớ cho Node.js
          export NODE_OPTIONS="--max-old-space-size=4096"
          # Đặt biến CI để Next.js biết đang trong môi trường CI
          export CI=true
          # Tắt telemetry
          export NEXT_TELEMETRY_DISABLED=1
          # Giảm verbose output
          npm run build --no-progress

      # Install và test server nếu có thay đổi
      - name: Install server dependencies
        if: steps.check-server.outputs.server == 'true'
        run: cd server && npm ci

      - name: Lint server
        if: steps.check-server.outputs.server == 'true'
        run: cd server && npm run lint

      - name: Build server
        if: steps.check-server.outputs.server == 'true'
        run: cd server && npm run build

  cd:
    runs-on: ubuntu-22.04
    # Chỉ chạy CD khi push vào nhánh deploy
    needs: ci
    if: github.event_name == 'push' && github.ref == 'refs/heads/deploy'
    steps:
      - name: Deploy to Production Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Xác định loại user và môi trường
            echo "Executing as $(whoami)"
            echo "Home directory: $HOME"

            # Thử tìm node trong các vị trí phổ biến
            NODE_PATH=$(find $HOME -name "node" -type f -executable 2>/dev/null | grep -v "node_modules" | head -n 1 || echo "")
            if [ -n "$NODE_PATH" ]; then
              NODE_BIN_DIR=$(dirname "$NODE_PATH")
              echo "Found Node at $NODE_PATH"
              export PATH="$NODE_BIN_DIR:$PATH"
            fi

            # Kiểm tra NVM
            if [ -d "$HOME/.nvm" ]; then
              echo "NVM found, activating..."
              export NVM_DIR="$HOME/.nvm"
              [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
              nvm use default || nvm use stable || nvm use node || echo "Failed to activate nvm"
            fi

            # Kiểm tra cài đặt toàn cục
            if command -v node &> /dev/null; then
              echo "Node is now available: $(which node)"
              echo "Node version: $(node -v)"
              echo "NPM version: $(npm -v)"
            else
              echo "NODE NOT FOUND IN PATH: $PATH"
              echo "Will attempt to install node..."
              curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
              sudo apt-get install -y nodejs
              sudo npm install -g pm2
            fi

            cd ${{ secrets.DEPLOY_PATH }}
            git fetch --all
            git checkout deploy
            git reset --hard origin/deploy

            # Tạo file .env cho client trong production
            echo "${{ secrets.CLIENT_ENV_PROD }}" > client/.env

            # Tạo file .env cho server trong production
            echo "${{ secrets.SERVER_ENV_PROD }}" > server/.env

            # Cập nhật client nếu có thay đổi
            if ${{ needs.ci.outputs.client-changed  == 'true' }}; then
              echo "Updating client..."
              cd client
              export NODE_OPTIONS="--max-old-space-size=1536"
              export NEXT_DISABLE_SOURCEMAPS=1
              export NEXT_TELEMETRY_DISABLED=1
              npm ci
              npm run build --no-progress
              cd ..
              pm2 startOrReload ecosystem.config.js --only qr-order-client 
            fi

            # Cập nhật server nếu có thay đổi
            if ${{ needs.ci.outputs.server-changed == 'true' }}; then
              echo "Updating server..."
              cd server
              npm ci
              npm run build
              cd ..
              pm2 startOrReload ecosystem.config.js --only qr-order-server
            fi
